{
  "name": "T&C Scraper Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "summarize",
        "options": {
          "responseCode": 200,
          "respondImmediately": true,
          "authentication": "none"
        }
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "url",
              "value": "{{ $json.query.url && $json.query.url.match(/^https?:\\/\\/[^\\s/$.?#].[^\\s]*$/) ? encodeURI($json.query.url.trim()) : 'https://www.python.org/about/legal/' }}"
            },
            {
              "name": "debug_url_input",
              "value": "{{ $json.query.url || 'No URL provided in query' }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Validate URL",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [360, 300]
    },
    {
      "parameters": {
        "url": "{{ $node['Validate URL'].json['url'] }}",
        "responseFormat": "text",
        "options": {
          "headers": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            }
          ],
          "timeout": 30,
          "allowUnauthorizedCerts": true,
          "followRedirects": true
        }
      },
      "name": "HTTP Request2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [480, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "output",
              "value": "{{ $node['HTTP Request2'].json['data'] && $node['HTTP Request2'].json['data'].length > 0 ? $node['HTTP Request2'].json['data'].replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '').replace(/<style\\b[^<]*(?:(?!<\\/style>)<[^<]*)*<\\/style>/gi, '').replace(/<[^>]+>/g, '').replace(/\\s+/g, ' ').replace(/[^\\w\\s.,!?]/g, '').trim() : 'Error: Could not fetch T&C document.' }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [600, 300]
    },
    {
      "parameters": {
        "command": "python /home/node/run_rag.py \"{{ $node['Set'].json['output'] }}\""
      },
      "name": "Execute Command",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [720, 300]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "summary",
              "value": "{{ JSON.parse($node['Execute Command'].json['output']).summary || 'Error: No summary generated.' }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Format Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [840, 300]
    },
    {
      "parameters": {
        "responseBody": "{{ [{'summary': $node['Format Output'].json['summary'] || 'Error: No summary generated.'}] }}",
        "options": {
          "responseFormat": "json"
        }
      },
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [960, 300]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Validate URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate URL": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Execute Command",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Command": {
      "main": [
        [
          {
            "node": "Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Output": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}